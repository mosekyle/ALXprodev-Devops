#!/bin/bash

# List of Pokémon names to retrieve data for
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch data for a given Pokémon
fetch_data() {
  pokemon_name=$1
  echo "Fetching data for $pokemon_name..."
  curl -s "https://pokeapi.co/api/v2/pokemon/$pokemon_name" -o "$pokemon_name.json"
  
  if [ $? -ne 0 ]; then
    echo "Error fetching data for $pokemon_name" >> errors.txt
  else
    echo "Successfully fetched data for $pokemon_name"
  fi
}

# Loop through the Pokémon list and fetch data in the background
for pokemon in "${pokemon_list[@]}"; do
  fetch_data "$pokemon" &  # Run fetch_data in the background
  pid=$!  # Get the process ID of the background job
  echo "Started background job for $pokemon with PID $pid"
  
  # Optionally, kill a background job if needed (this is an example)
  # For instance, we can kill the job after some condition or time
  sleep 2  # Example: sleep for 2 seconds before killing
  kill $pid  # Kill the background job using its PID
  echo "Killed background job for $pokemon with PID $pid"
done

# Wait for all background jobs to complete (though we are killing them in this case)
wait

echo "Data fetching completed for all Pokémon."

